#!/usr/bin/env bash
##
##  So many years of fooling around...
##
##


[ -e $f ] && rm -rf $HISTFILE


function dynamic_aliases {
  if sed --version >&/dev/null 2>&1
  then  # GNU sed
    rsed="sed -r"
  else  # BSD sed
    rsed="sed -E"
  fi
  if ls --version >&/dev/null 2>&1
  then  # GNU ls
    alias l='ls --color'
    alias ll='ls -lA --color'
  else  # BSD ls
    alias l='ls -G'
    alias ll='ls -GlA'
  fi
}

dynamic_aliases

for d in /etc /usr/local/etc /opt/local/etc
do
  [ -f $d/bash_completion ] && source $d/bash_completion
done



## begin prompt of power ##############################################
# I used to have the prompt set up as a bunch of functions; but that
# didn't work very well with sh. Now, I have mastered the various
# levels of evaluation and quoting of the shell and can confidently
# write hideous macros!

DARK="\[\e[01;34m\]"
NORM="\[\e[01;32m\]"
FADE="\[\e[01;30m\]"
REST="\[\e[00;00m\]"
HIGH="\[\e[01;33m\]"

function cutter {
  $rsed "s/(.{$1})..+.(.{$2})/\1...\2/"
}

function escape_nl {
  $rsed -n '1 { x ;} ; 2,$ { H ; x ; s/\n/^J/ ; x ;} ; $ { x ; p ;}'
}

function dir {
  pwd -P | escape_nl | cat -t | cutter 19 18 # At most 40 chars.
}

function host {
  hostname | cutter 9 8  # At most 20 chars.
}

function user {
  whoami | cutter 7 6   # At most 16 chars.
}

function bold {
  tput bold
}

function gray {
  tput setaf 0
}

function blue {
  tput setaf 4
}

function green {
  tput setaf 2
}

function red {
  tput setaf 1
}

function pretty_prompt {
  local -A s=( [user]=$(user) [host]=$(host) [dir]=$(dir) )
  local rfill=80
  local buff=""
  local component=""
  buff="$buff""$(bold)""$(blue)"
  buff="$buff""# "                   ;  let "rfill-=2"
  buff="$buff""$(blue)"
  buff="$buff""$([[ ${s[user]} = root ]] && red)"
  buff="$buff""${s[user]}"           ;  let "rfill-=${#s[user]}"
  buff="$buff""$(gray)"
  buff="$buff"'@'                    ;  let "rfill-=1"
  buff="$buff""$(blue)"
  buff="$buff""${s[host]}"           ;  let "rfill-=${#s[host]}"
  buff="$buff""$(gray)"
  buff="$buff"':'                    ;  let "rfill-=1"
  buff="$buff""$(green)"
  while read -r -d/ component
  do
    case "$?" in
      0)  buff="$buff""$(green)$component$(gray)/" ;;
      *)  buff="$buff""$(green)$component" ;;
    esac
  done <<<"${s[dir]}"
  buff="$buff""$(green)$component"   ;  let "rfill-=${#s[dir]}"
  for space in $(seq 1 $rfill)
  do
    buff="$buff"' '
  done
  echo "$buff"
}


prepend=''
if [ "${TERM}" = "xterm" ]
then
  my_tty=`tty | awk -F/ '{ print $3 $4}'`
  xterm_title="\[\e]0;${my_tty} \u@\H\007\]"
  prepend="${xterm_title}"
fi

export          PROMPT_COMMAND=pretty_prompt
#export         PS1="${prepend}${prompt}"
export          PS1="$DARK:$FADE;  $REST"
export          PS2='  '

## end prompt of power ################################################


##if which vimpager >&/dev/null
##then
##  export        PAGER=vimpager
##  export        MANPAGER=vimmanpager
##fi
export          EDITOR=vim
export          TEXEDIT="${EDITOR} +%d %s"
export          PATH=$PATH:/sbin/:/usr/sbin/:$HOME/bin:./bin:.
export          TZ=/usr/share/zoneinfo/America/Los_Angeles

alias           go='pushd'
alias           b='popd'
alias           h='history'
alias           r='rm -r'
alias           :x='exit'
alias           :q='exit'
alias           :e=$EDITOR

set -o vi


